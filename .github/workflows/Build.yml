name: Build and Deploy

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
        with:
          fetch-depth: 2 # Holen Sie sich die letzten zwei Commits f√ºr einen besseren Verlauf

      - name: Setup Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 'lts/*'
          cache: 'pnpm'

      - name: Install pnpm
        run: npm install -g pnpm

      - name: Install Dependencies
        run: pnpm install

      - name: Build Project
        run: pnpm run build
        env:
          CI: true # Setzt die Umgebungsvariable f√ºr CI-Tools, um m√∂gliche Build-Fehler zu erkennen

      - name: Run Tests
        run: pnpm test
        continue-on-error: true # Tests k√∂nnen fehlschlagen, ohne den Build-Prozess zu stoppen

      - name: Notify on Failure
        if: failure() # Nur ausf√ºhren, wenn ein Fehler auftritt
        uses: actions/github-script@v6
        with:
          script: |
            const { context, github } = require('@actions/github');
            const issue = context.issue;
            const message = `üö® Build failed for commit [${context.sha}](https://github.com/${context.repo.owner}/${context.repo.repo}/commit/${context.sha}) on branch \`${context.ref}\`. Please check the [Actions tab](https://github.com/${context.repo.owner}/${context.repo.repo}/actions) for details.`;
            await github.issues.createComment({
              ...issue,
              body: message,
            });

      - name: Upload Build Artifacts
        if: success() # Nur ausf√ºhren, wenn der Build erfolgreich ist
        uses: actions/upload-artifact@v3
        with:
          name: build
          path: ./dist # Angenommener Pfad f√ºr den Build-Output

      - name: Clean up
        run: pnpm cache clean --force # Bereinigt den Cache, um Speicherplatz zu sparen

